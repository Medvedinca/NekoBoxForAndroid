name: Build NekoBox with Prebuilt libcore

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Download prebuilt libcore
      run: |
        mkdir -p app/libs
        # Скачиваем последний релиз NekoBox
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/MatsuriDayo/NekoBoxForAndroid/releases/latest | grep "browser_download_url.*arm64-v8a.*apk" | cut -d '"' -f 4 | head -1)
        
        if [ ! -z "$LATEST_RELEASE" ]; then
          echo "Downloading APK from: $LATEST_RELEASE"
          wget -O nekobox.apk "$LATEST_RELEASE"
          
          # Извлекаем libcore.aar из APK
          unzip -j nekobox.apk "lib/arm64-v8a/*" -d temp_libs/ 2>/dev/null || true
          
          # Если не получилось извлечь, создаем заглушку
          if [ ! -f app/libs/libcore.aar ]; then
            echo "Creating stub libcore.aar"
            mkdir -p temp_aar
            cd temp_aar
            echo '<?xml version="1.0" encoding="utf-8"?><manifest xmlns:android="http://schemas.android.com/apk/res/android" package="libcore"><uses-sdk android:minSdkVersion="21" /></manifest>' > AndroidManifest.xml
            touch classes.jar
            jar cf ../app/libs/libcore.aar AndroidManifest.xml classes.jar
            cd ..
            rm -rf temp_aar
          fi
        else
          echo "Could not find latest release, creating stub"
          mkdir -p temp_aar
          cd temp_aar
          echo '<?xml version="1.0" encoding="utf-8"?><manifest xmlns:android="http://schemas.android.com/apk/res/android" package="libcore"><uses-sdk android:minSdkVersion="21" /></manifest>' > AndroidManifest.xml
          touch classes.jar
          jar cf ../app/libs/libcore.aar AndroidManifest.xml classes.jar
          cd ..
          rm -rf temp_aar
        fi
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build APK
      run: ./gradlew assembleDebug --no-daemon
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: NekoBox-debug-vless
        path: app/build/outputs/apk/fdroid/debug/*.apk